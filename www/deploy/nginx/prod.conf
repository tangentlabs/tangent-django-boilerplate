# Custom log format that includes response time
# See http://lincolnloop.com/blog/tracking-application-response-time-nginx/
log_format timed_combined '$remote_addr - $remote_user [$time_local]  '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '$request_time $upstream_response_time $pipe';

server {
    listen 80;
    server_name prod.{{ project_code }}.{{ domain }};

    # Log to the project folder
    access_log /var/www/{{ client }}/{{ project_code }}/logs/prod/nginx_access.log timed_combined;
    error_log /var/www/{{ client }}/{{ project_code }}/logs/prod/nginx_error.log;

    # SSL settings (need to change port above for this)
    #ssl on;
    #ssl_certificate /etc/ssl/certs/{{ domain }}.pem;
    #ssl_certificate_key /etc/ssl/private/{{ domain }}.key;

    gzip on;
    gzip_static on;
    gzip_types text/plain application/xml application/x-javascript text/javascript text/css application/x-json;

    client_max_body_size 20m;
    root /var/www/{{ client }}/{{ project_code }}/builds/prod/public;

    location / {
        # Maintenance mode
        # ----------------
        # Create a file public/site_down to trigger a 503 response with a static
        # maintenance page.  User's from the local network will still be able to
        # get through though.

        set $maintenance 0;
        if (-f $document_root/site_down) {
            set $maintenance 1;
        }
        if ($remote_addr ~ "^192\.168") {
            set $maintenance 0;
        }
        if ($maintenance = 1) {
            return 503;
        }

        # Not in maintenance mode, so pass request through to uWSGI
        uwsgi_pass unix:/var/www/{{ client }}/{{ project_code }}/run/prod/uwsgi.sock;
        uwsgi_send_timeout 5;
        include uwsgi_params;
    }

    error_page 503 @maintenance_page;

    location @maintenance_page {
        rewrite ^(.*)$ /maintenance.html break;
    }

    location =/favicon.ico {
        root /var/www/{{ client }}/{{ project_code }}/builds/prod/public/static/;
        expires max;
    }

    location =/robots.txt {
        root /var/www/{{ client }}/{{ project_code }}/builds/prod/public/static/;
        expires max;
    }

    location /static/ {
        expires max;
        alias /var/www/{{ client }}/{{ project_code }}/builds/prod/public/static/;
    }

    # Store uploads which require authentication to view in a 'private' folder
    # within the MEDIA_ROOT and use a custom view to return X-Accel-Redirect
    # header so that Nginx serves the file directly. The location (/media/private) should
    # match the PRIVATE_MEDIA_URL setting.
    location /media/private/ {
        internal;
        alias /var/www/{{ client }}/{{ project_code }}/builds/prod/public/media/private/;
    }

    location /media/ {
        expires max;
        alias /var/www/{{ client }}/{{ project_code }}/builds/prod/public/media/;
    }

    location /admin/ {
        if ($remote_addr !~ "^(192\.168|10\.0\.)") {
            return 403;
        }
        uwsgi_pass unix:/var/www/{{ client }}/{{ project_code }}/run/prod/uwsgi.sock;
        uwsgi_send_timeout 5;
        include uwsgi_params;
    }
}
